#
#
# Copyright (c) 2015 - 2021 by blindtiger. All rights reserved.
#
# The contents of this file are subject to the Mozilla Public License Version
# 2.0 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. SEe the License
# for the specific language governing rights and limitations under the
# License.
#
# The Initial Developer of the Original Code is blindtiger.
#
#

LABS=..\..\..

!if "$(PLATFORM)" == "x86"
ARCTARG = I386
!if "$(PROCESSOR_ARCHITEW6432)" == "AMD64"
PATH = C:\Windows;C:\Windows\System32;$(LABS)\MiniSDK\bin\Hostx64\x86
!else
PATH = C:\Windows;C:\Windows\System32;$(LABS)\MiniSDK\bin\Hostx86\x86
!endif
!else if "$(PLATFORM)" == "x64"
ARCTARG = AMD64
!if "$(PROCESSOR_ARCHITEW6432)" == "AMD64"
PATH = C:\Windows;C:\Windows\System32;$(LABS)\MiniSDK\bin\Hostx64\x64
!else
PATH = C:\Windows;C:\Windows\System32;$(LABS)\MiniSDK\bin\Hostx86\x64
!endif
!else
!ERROR Usage: nmake (PLATFORM=x86|x64) (PROJ=ProjectName) (SLND=SolutionDir) [build|clean|rebuild]
!endif

BIND = $(SLND)Build\Bins\$(ARCTARG)

PROJTARG = $(BIND)\$(PROJ)
PROJD = $(SLND)projects\$(PROJ)

BUILD: $(PROJTARG).sys

OBJD = $(SLND)Build\Objs\$(PROJ)\$(ARCTARG)
                           
PROJENTRY = GsDriverEntry

#ASOBJS = \
#    $(OBJD)\$(ARCTARG).obj \
#    $(OBJD)\Cmp$(ARCTARG).obj

CCARCHOBJS = \
    $(OBJD)\Stack$(ARCTARG).obj \
    $(OBJD)\Space$(ARCTARG).obj \

CCOBJS = \
    $(OBJD)\Main.obj \
    $(OBJD)\Falcon.obj \
    $(OBJD)\Neac.obj \
    $(OBJD)\File.obj \
    $(OBJD)\Mapper.obj \
    $(OBJD)\Hash.obj \
    $(OBJD)\NtApi.obj \
    $(OBJD)\Modules.obj \
    $(OBJD)\Search.obj \
    $(OBJD)\Process.obj \
    $(OBJD)\Thread.obj \
    $(OBJD)\Memory.obj \
    $(OBJD)\Dpc.obj \
    $(OBJD)\SysPool.obj \
    $(OBJD)\Hook.obj \
    $(OBJD)\Check.obj \
    
#RCOBJS = $(OBJD)\$(PROJ).res

PROJOBJS = $(CCARCHOBJS) $(CCOBJS) 

!if "$(ARCTARG)" == "I386"
TARGDEFS = /D_X86_=1 /Di386=1 /DSTD_CALL /DFPO=0
TARGAOPTS = /safeseh /coff /Zm
TARGCOPTS = /Gz /Gm- /EHs-c- /Od /Oy-
TARGLOPTS = 
#HOTPATCH = /stub:$(LABS)\WRK\base\ntos\BUILD\PREBUILT\$(ARCTARG)\STUB512.com
ARCH = X86
ARCHML = ml
!else if "$(ARCTARG)" == "AMD64"
TARGDEFS = /D_WIN64 /D_AMD64_ /DAMD64
TARGAOPTS = 
TARGCOPTS = /Od /EHs-c- /Gs12288
TARGLOPTS = /IGNORE:4108,4088,4218,4218,4235
#HOTPATCH = $(LABS)\WRK\base\ntos\BUILD\PREBUILT\$(ARCTARG)\HOTPATCH.obj
ARCH = AMD64
ARCHML = ml64
!endif

#PROJLOPTS = /SUBSYSTEM:NATIVE /ENTRY:$(PROJENTRY) /DEF:$(PROJ).def
PROJLOPTS = /SUBSYSTEM:NATIVE /ENTRY:$(PROJENTRY)

INCS = \
    /I$(LABS)\MiniSDK\inc\ddk \
    /I$(LABS)\MiniSDK\inc\halkit \
    /I$(LABS)\MiniSDK\inc\internal\base \
    /I$(LABS)\MiniSDK\inc\internal\ds \
    /I$(LABS)\MiniSDK\inc\internal\sdktools \
    /I$(LABS)\MiniSDK\inc\sdk \
    /I$(LABS)\MiniSDK\inc\sdk\crt \
    /I$(LABS)\MiniSDK\inc\sdk\crt\gl \
    /I$(LABS)\MiniSDK\inc\sdk\crt\sys \
    /I$(LABS)\MiniSDK\inc\base \
    /I$(LABS)\MiniSDK\inc\base\ntos \
    /I$(LABS)\MiniSDK\inc\base\ntos\VERIFIER \
    /I$(SLND)\Include \
    /I$(PROJD)\

DEFS = /DUNICODE /D_UNICODE $(TARGDEFS) /DCONDITION_HANDLING=1 /DNT_INST=0 /DWIN32=100 /D_NT1X_=100 /DWINNT=1 \
    /DDEVL=1 /D_NTSYSTEM_ /DNT_SMT /DNTOS_KERNEL_RUNTIME=1 /D_NTDRIVER_ /DZYAN_NO_LIBC /DZYDIS_STATIC_BUILD

COPTS = /Z7 /Od /Zl /Zp8 /Gy /cbstring /W3 /WX /GR- /GF /GS $(TARGCOPTS)
COMPILERWARNINGS = /FI$(LABS)\WRK\base\ntos\BUILD\WARNING.h /FI$(SLND)\Include\WARNING.h

AOPTS = /Cx /Zi /Zd $(TARGAOPTS)
AS = $(ARCHML).exe /nologo
AFLAGS = $(AOPTS) $(INCS) /Fo$(OBJD)\ $(DEFS) $(SPECIALAFLAGS)

CC = cl.exe /nologo
CFLAGS = $(COPTS) $(INCS) /Fo$(OBJD)\ $(DEFS) $(SPECIALCFLAGS) $(COMPILERWARNINGS)

RC = rc.exe /nologo
RFLAGS = $(INCS) /fo$(RCOBJS)
                  
LINKLIBPATH = \
    /LIBPATH:$(LABS)\MiniSDK\lib\$(ARCTARG) \
    /LIBPATH:$(LABS)\MiniSDK\lib\Crt\$(ARCTARG) \
    /LIBPATH:$(SLND)\Lib\$(ARCTARG)

LINKIGNORE = /IGNORE:4087,4001,4010,4037,4039,4065,4070,4078,4087,4089,4221,4198

CAPSTONE = \
    capstone\AArch64BaseInfo.obj \
    capstone\AArch64Disassembler.obj \
    capstone\AArch64InstPrinter.obj \
    capstone\AArch64Mapping.obj \
    capstone\AArch64Module.obj \
    capstone\ARMDisassembler.obj \
    capstone\ARMInstPrinter.obj \
    capstone\ARMMapping.obj \
    capstone\ARMModule.obj \
    capstone\cs.obj \
    capstone\M68KDisassembler.obj \
    capstone\M68KInstPrinter.obj \
    capstone\M68KModule.obj \
    capstone\MCInst.obj \
    capstone\MCInstrDesc.obj \
    capstone\MCRegisterInfo.obj \
    capstone\MipsDisassembler.obj \
    capstone\MipsInstPrinter.obj \
    capstone\MipsMapping.obj \
    capstone\MipsModule.obj \
    capstone\PPCDisassembler.obj \
    capstone\PPCInstPrinter.obj \
    capstone\PPCMapping.obj \
    capstone\PPCModule.obj \
    capstone\SparcDisassembler.obj \
    capstone\SparcInstPrinter.obj \
    capstone\SparcMapping.obj \
    capstone\SparcModule.obj \
    capstone\SStream.obj \
    capstone\SystemZDisassembler.obj \
    capstone\SystemZInstPrinter.obj \
    capstone\SystemZMapping.obj \
    capstone\SystemZMCTargetDesc.obj \
    capstone\SystemZModule.obj \
    capstone\utils.obj \
    capstone\winkernel_mm.obj \
    capstone\X86ATTInstPrinter.obj \
    capstone\X86Disassembler.obj \
    capstone\X86DisassemblerDecoder.obj \
    capstone\X86IntelInstPrinter.obj \
    capstone\X86Mapping.obj \
    capstone\X86Module.obj \
    capstone\XCoreDisassembler.obj \
    capstone\XCoreInstPrinter.obj \
    capstone\XCoreMapping.obj \
    capstone\XCoreModule.obj
            
BUILDLIBS = hal.lib ntoskrnl.lib bufferoverflowk.lib libcntpr.lib Zydis.lib\
!if "$(ARCTARG)" == "I386"
    \
!else if "$(ARCTARG)" == "AMD64"
    gshandler.obj gshandlerseh.obj \
!endif
    $(CAPSTONE)

LINK = link.exe /nologo
LINKFLAGS = $(LINKIGNORE) /WX /NODEFAULTLIB /machine:$(ARCH) /debug /debugtype:cv,fixup

LINKPROJNAMES = /out:$(PROJTARG).sys /map:$(PROJTARG).map /pdb:$(PROJTARG).pdb

$(PROJTARG).sys: $(PROJOBJS)
    @$(LINK) $(LINKFLAGS) $(PROJLOPTS) $(LINKPROJNAMES) $** $(HOTPATCH) $(LINKLIBPATH) $(BUILDLIBS)

# assembly files
{$(ARCTARG)\}.asm{$(OBJD)\}.obj::
    @$(AS) $(AFLAGS) /c $<

# arch-specific C files
{$(ARCTARG)\}.c{$(OBJD)\}.obj::
    @$(CC) $(CFLAGS) /c $<

# C files
.c{$(OBJD)\}.obj::
    @$(CC) $(CFLAGS) /c $<
    
# RC files
.rc{$(OBJD)\}.res::
    @$(RC) $(RFLAGS) $<

# CLEAN pseudo targets

CLEAN:
    @if exist $(OBJD)\*.res del /F /Q $(OBJD)\*.res
    @if exist $(OBJD)\*.obj del /F /Q $(OBJD)\*.obj
    @if exist $(PROJTARG).exe del /F /Q $(PROJTARG).exe
    @if exist $(PROJTARG).sys del /F /Q $(PROJTARG).sys
    @if exist $(PROJTARG).dll del /F /Q $(PROJTARG).dll
    @if exist $(PROJTARG).lib del /F /Q $(PROJTARG).lib
    @if exist $(PROJTARG).simg del /F /Q $(PROJTARG).simg
    @if exist $(PROJTARG).exp del /F /Q $(PROJTARG).exp
    @if exist $(PROJTARG).map del /F /Q $(PROJTARG).map
    @if exist $(PROJTARG).pdb del /F /Q $(PROJTARG).pdb

REBUILD: CLEAN BUILD
